syntax = "proto3";
package feicoin.feicoin.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "feicoin/feicoin/v1/params.proto";
import "gogoproto/gogo.proto";

option go_package = "feicoin/x/feicoin/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  
  // MintTokens allows authorized users to mint new tokens
  rpc MintTokens(MsgMintTokens) returns (MsgMintTokensResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "feicoin/x/feicoin/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgMintTokens is the Msg/MintTokens request type.
message MsgMintTokens {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "feicoin/x/feicoin/MsgMintTokens";

  // authority is the address that has minting permissions
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // recipient is the address to receive the newly minted tokens
  string recipient = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // amount is the amount of tokens to mint (in base units)
  string amount = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // denom is the denomination of tokens to mint
  string denom = 4;
}

// MsgMintTokensResponse defines the response structure for executing a
// MsgMintTokens message.
message MsgMintTokensResponse {}
